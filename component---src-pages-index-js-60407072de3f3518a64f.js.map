{"version":3,"sources":["webpack:///./src/components/tree/star.js","webpack:///./src/utils.js","webpack:///./src/components/tree/branch.js","webpack:///./src/components/tree/treeGreen.js","webpack:///./src/components/tree/box.js","webpack:///./src/components/tree/trunk.js","webpack:///./src/components/tree/tree.js","webpack:///./src/pages/index.js"],"names":["StarWrapper","styled","div","fonts","text","colors","snow","star1","breakpoints","tablet","laptop","red","accent1","Star","day","isDay","checkDay","useState","sparkle","setSparkle","onClick","className","map","el","key","id","mo","today","Date","getDate","getMonth","randoNummo","Math","floor","random","shuffleRange","startAt","range","Array","keys","i","sort","splitTree","wholeTree","slice","FirBranch","star2","FirDate","props","ornament","console","log","Branch","thisDay","setOrnament","backgroundColor","setBackgroundColor","openDoor","style","background","FirBranches","firLight","firMedium","firDark","TreeGreen","rowLength","rowCounter","treeArr","subArr","firArr","push","TrunkBoxDiv","Box","trunk","TrunkPan","Trunk","trunkArr","StarRow","Tree","textAlign","IndexPage"],"mappings":"skEAKA,IAAMA,EAAcC,IAAOC,IAAV,IAaAC,IAAMC,KACZC,IAAOC,KAIID,IAAOE,MAGNC,IAAYC,OAKZD,IAAYE,OAMjBL,IAAOM,IAGPN,IAAOE,MAsBLF,IAAOE,MAIPF,IAAOE,MAqBPF,IAAOO,QAKPP,IAAOM,KA4CZE,EA3BF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,IACRC,GAAQC,EADoB,EAAfA,UACI,GAAIF,GADO,EAGJG,mBAAS,aAAhCC,EAH2B,KAGlBC,EAHkB,KAUlC,OACE,yBAAKC,QAAS,WANVL,GACFI,EAAW,aAMX,kBAACnB,EAAD,CAAaqB,UAAS,eAAiBH,GACrC,yBAAKG,UAAU,YAAYP,GAC3B,yBAAKO,UAAS,GAAKH,GAChB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGI,KAAI,SAAAC,GAAE,OAC9B,yBACEC,IAAG,gBAAkBD,EACrBF,UAAU,cACVI,GAAE,cAAgBF,W,+aChIzB,IAAMP,EAAW,SAACU,EAAIZ,GAC3B,IAAMa,EAAQ,IAAIC,KAClB,OAAOD,EAAME,WAAaf,GAAOa,EAAMG,WAAa,GAAKJ,GAK9CK,EAAY,WACxB,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,WAiBXC,EAAe,WAC1B,IAL+BC,EAKzBC,QALyC,KAAhBD,EAKF,KALEA,EAAU,GAClC,EAAIE,MAIc,IAJFC,QAAQjB,KAAI,SAAAkB,GAAC,OAAIA,EAAIJ,MAK5C,OATO,EASQC,GATCI,MAAK,kBAAMT,KAAKE,SAAW,OAYhCQ,EAAY,WACvB,IAAMC,EAAYR,IAGlB,MAAO,CAFKQ,EAAUC,MAAM,GACdD,EAAUC,MAAM,EAAG,K,+iFC7BnC,IAAMC,EAAY5C,IAAOC,IAAV,IAWEC,IAAMC,KAaAI,IAAYC,OAUZD,IAAYE,OAWNL,IAAOyC,OAK9BC,EAAU9C,IAAOC,IAAV,KAiBC,SAAA8C,GAAK,MAAqB,aAAjBA,EAAMC,SAAwB5C,IAAOM,IAArC,gBAURN,IAAOyC,MAiBCtC,IAAYC,OAeZD,IAAYE,OAgBdF,IAAYC,OAKZD,IAAYE,QAMjCwC,QAAQC,IAAIpB,KACZ,IA8BeqB,EA9BA,SAAC,GAAuB,IAArBtC,EAAoB,EAApBA,IAAKE,EAAe,EAAfA,SAEjBqC,EAAUvC,EAFsB,EAGJG,mBAAS,IAAlCgC,EAH6B,KAGnBK,EAHmB,OAIUrC,mBAAS,eAAhDsC,EAJ6B,KAIZC,EAJY,KAK/BzC,EAAQC,EAAS,GAAIqC,GAOpBI,EAAW,WACX1C,IACJyC,EAJI,OAHIzB,IAGV,KAFUA,IAEV,KADUA,IACV,KAKIuB,EAAY,cAIhB,OACE,yBAAKlC,QAAS,kBAAMqC,MAClB,kBAACZ,EAAD,CAAWxB,UAAW4B,EAAU,oBAAsB,YACpD,kBAACF,EAAD,CAASE,SAAQ,GAAKA,EAAYS,MAAO,CAACC,WAAW,GAAGJ,IAAqBzC,EAC7E,yBAAKO,UAAW4B,EAAU,eAAiB,e,smDChKnD,IAAMW,EAAc3D,IAAOC,IAAV,IAcMM,IAAYC,OAGZD,IAAYE,OASZF,IAAYC,OAGZD,IAAYE,OAgBTL,IAAOwD,SAEDxD,IAAOwD,SAGXxD,IAAOwD,SAQTxD,IAAOyD,UAEDzD,IAAOyD,UAGXzD,IAAOyD,UAOTzD,IAAO0D,QAED1D,IAAO0D,QAGX1D,IAAO0D,SA0CpBC,EArCG,SAAC,GAA0B,IAIrCC,EACAC,EACAC,EACAC,EAPaC,EAAuB,EAAvBA,OAAQrD,EAAe,EAAfA,SAmC3B,OAAO,kBAAC4C,EAAD,MA/BDK,EAAY,EACZC,EAAa,EACbC,EAAU,GACVC,EAAS,GACbC,EAAO/C,KAAI,SAACC,EAAIiB,GAuBd,OAtBA4B,EAAOE,KACL,kBAAC,EAAD,CAAQ9C,IAAG,GAAKgB,EAAIjB,EAAME,GAAE,OAASe,EAAK1B,IAAKS,EAAIP,SAAUA,GAC1DO,MAGL2C,IAEmBD,IACjBA,IAEAE,EAAQG,KACN,yBACEjD,UAAU,SACVI,GAAE,UAAYyC,EACd1C,IAAG,GAAKgB,EAAIjB,EAAT,OAEF6C,IAGLF,EAAa,EACbE,EAAS,IAEJA,KAEFD,K,+eCjHX,IAAMI,EAActE,IAAOC,IAAV,IAaMM,IAAYC,OAGZD,IAAYE,QAOnCwC,QAAQC,IAAIpB,KACZ,IAwBeyC,EAxBH,SAAC,GAAuB,IAArB1D,EAAoB,EAApBA,IAAKE,EAAe,EAAfA,SAEdqC,EAAUvC,EAFmB,EAIaG,mBAAS,GAAGZ,IAAOoE,OAA1DlB,EAJ0B,KAITC,EAJS,KAK5BzC,EAAQC,EAAS,GAAIqC,GAKpBI,EAAW,WACX1C,GACJyC,EAJI,OADIzB,IACV,WAQA,OAEI,kBAACwC,EAAD,CAAab,MAAO,CAACC,WAAW,GAAGJ,GAAoBnC,QAAS,kBAAMqC,MACpE3C,I,0ZC3CR,IAAM4D,EAAWzE,IAAOC,IAAV,IAWGC,IAAMC,MAkBRuE,EAdD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAU5D,EAAc,EAAdA,SAYzB,OAAO,kBAAC0D,EAAD,KATcE,EAAStD,KAAI,SAACC,EAAIiB,GACnC,OACE,kBAAC,EAAD,CAAMhB,IAAG,GAAKgB,EAAIjB,EAAMT,IAAKS,EAAKP,SAAUA,GAC1CO,Q,6VCnBV,IAAMsD,EAAU5E,IAAOC,IAAV,KAYE,SAAS4E,IACtB,IAAMnC,EAAYD,IACZ2B,EAAS1B,EAAU,GACnBiC,EAAWjC,EAAU,GAC3B,OACE,yBAAKe,MAAO,CAAEqB,UAAW,WACvB,kBAACF,EAAD,CAASxD,UAAU,WACjB,kBAAC,EAAD,CAAMP,IAAK,GAAIE,SAAUA,KAG3B,kBAAC,EAAD,CAAWqD,OAAQA,EAAQrD,SAAUA,IACrC,kBAAC,EAAD,CAAO4D,SAAUA,EAAU5D,SAAUA,KCnB5BgE,UANG,kBAChB,kBAAC,IAAD,KACE,kBAACF,EAAD","file":"component---src-pages-index-js-60407072de3f3518a64f.js","sourcesContent":["//day 25\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { colors, breakpoints, fonts } from \"../../styles/variables\";\nconst StarWrapper = styled.div`\n  position: relative;\n  z-index: 2;\n  text-align: unset;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-pack:center;\n  -ms-flex-pack:center;\n  justify-content:center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  font-family: ${fonts.text};\n  color: ${colors.snow};\n  font-size: 18px;\n  width: 36px;\n  height: 36px;\n  background-color: ${colors.star1};\n  margin-bottom: 0.3em;\n  border-radius: 50%;\n  @media (min-width: ${breakpoints.tablet}) {\n    font-size: 21px;\n    width: 42px;\n    height: 42px;\n  }\n  @media (min-width: ${breakpoints.laptop}) {\n    font-size: 24px;\n    width: 48px;\n    height: 48px;\n  }\n  &.sparkle{\n    background: ${colors.red};\n  }\n  .starDate {\n    background: ${colors.star1};\n    border-radius: 50%;\n    padding: 2px;\n    z-index: 3;\n  }\n  .noSparkle {\n    display: none;\n  }\n  .sparkle {\n    position: absolute;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n    transition: all 1s  ease-in-out;\n    .sparkleBits {\n      position: absolute;\n      width: 50%;\n      height: 50%;\n      transform: rotate(45deg);\n    }\n    #sparkleBit-1,\n    #sparkleBit-4 {\n      background: ${colors.star1};\n    }\n    #sparkleBit-2,\n    #sparkleBit-3 {\n      background: ${colors.star1};\n    }\n    #sparkleBit-1,\n    #sparkleBit-3 {\n      left: 0;\n    }\n    #sparkleBit-2,\n    #sparkleBit-4 {\n      left: 50%;\n    }\n    #sparkleBit-1,\n    #sparkleBit-2 {\n      top: 0;\n    }\n    #sparkleBit-3,\n    #sparkleBit-4 {\n      top: 50%;\n    }\n    #sparkleBit-5, \n    #sparkleBit-7 {\n      left: 25%;\n      background: ${colors.accent1};\n    }\n    #sparkleBit-6, \n    #sparkleBit-8 {\n      top: 25%;\n      background: ${colors.red};;\n    }\n    #sparkleBit-5{\n      top:-10%\n    }\n    #sparkleBit-7{\n      top:60%\n    }\n    #sparkleBit-6{\n      left:60%\n    }\n    #sparkleBit-8{\n      left:-10%\n    }\n  }\n`;\n\nconst Star = ({ day, checkDay }) => {\n  const isDay = checkDay(12, day);\n\n  const [sparkle, setSparkle] = useState(\"noSparkle\");\n  const openDoor = () => {\n    if (isDay) {\n      setSparkle(\"sparkle\");\n    }\n  };\n\n  return (\n    <div onClick={() => openDoor()}>\n      <StarWrapper className={`starWrapper ${sparkle}`}>\n        <div className=\"starDate\">{day}</div>\n        <div className={`${sparkle}`}>\n          {[1, 2, 3, 4, 5, 6, 7, 8].map(el => (\n            <div\n              key={`boobenheimer-${el}`}\n              className=\"sparkleBits\"\n              id={`sparkleBit-${el}`}\n            />\n          ))}\n        </div>\n      </StarWrapper>\n    </div>\n  );\n};\nexport default Star;\n","export const checkDay = (mo, day) => {\n  const today = new Date();\n  return today.getDate() >= day && today.getMonth() + 1 >= mo;\n};\nexport const checkDayTest = (mo, day) => {\n  return day <= 15 && mo <= 12;\n};\nexport const randoNummo =()=>{\n return Math.floor(Math.random() * 256);\n}\n\n//FUNCTIONS TO BUILD THE TREE\n// the tree  is 24 days. 25th is the star. not dealt with in the tree.\n// get a range of days 1-24 and shuffle those so that thy're not in the same div every day\n// 21 of those days are green fir days.\n// 3 of those days are for trunk and stand.\n// split the shuffled array into two: 3 and 21\nexport const shuffle = arr => {\n  return [...arr].sort(() => Math.random() - 0.5);\n};\n// range builder for any range. ... in case i want it later\nexport const buildRange = (size, startAt = 0) => {\n  return [...Array(size).keys()].map(i => i + startAt);\n};\n//uses range and shuffle. returns one.\nexport const shuffleRange = () => {\n  const range = buildRange(24, 1);\n  return shuffle(range);\n};\n\nexport const splitTree = () => {\n  const wholeTree = shuffleRange();\n  const fir = wholeTree.slice(3);\n  const trunk = wholeTree.slice(0, 3);\n  return [fir, trunk];\n};\nexport const buildTree = () => {\n  let rowLength = 1;\n  let rowCounter = 0;\n\n  for (let i = 1; i <= 21; i++) {\n    document.write(i + \" \");\n\n    rowCounter++;\n\n    if (rowCounter === rowLength) {\n      rowLength++;\n      rowCounter = 0;\n      document.write(\"<br>\");\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { colors, fonts, breakpoints } from \"../../styles/variables\";\nimport {randoNummo} from '../../utils';\nconst FirBranch = styled.div`\nposition:relative;\ndisplay:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-pack:center;\n  -ms-flex-pack:center;\n  justify-content:center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  font-family: ${fonts.text};\n  width: 60px;\n  height: 60px;\n  border-radius: 1px;\n  margin: 0;\n  &:before, \n  &:after{\n    content: \"\";\n    position: absolute;\n    width: 0;\n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n  }\n  @media (min-width: ${breakpoints.tablet}) {\n    width: 64px;\n    height: 64px;\n    border-radius: 3px;\n    &:before, \n    &:after{\n      border-left-width: 32px;\n      border-right-width: 32px;\n    }\n  }\n  @media (min-width: ${breakpoints.laptop}) {\n    width: 72px;\n    height: 72px;\n    border-radius: 8px;\n    &:before, \n    &:after{\n      border-left-width: 36px;\n      border-right-width: 36px;\n    }\n  }\n  &.ornament-wrapper{\n    box-shadow:0 0 2px 2px ${colors.star2};\n  }\n\n\n`;\nconst FirDate = styled.div`\nposition:relative;\ndisplay:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-pack:center;\n  -ms-flex-pack:center;\n  justify-content:center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\nz-index: 3;\npadding: 2px;\nfont-size: 18px;\nwidth: 36px;\nheight: 36px;\nborder-radius: 50%;\nbackground: ${props => props.ornament===\"ornament\" ? colors.red : `transparent`};\n.noShow{\n  display:none;\n\n}\n.ornament-cap{\n  position:absolute;\n  width:5px;\n  height:5px;\n  top:-4px;\n  background:${colors.star2};\n  &:after{\n    content: '{';\n    position:absolute;\n    top:-4px;\n    left:-0.5px;\n    font-size: 7px;\n    transform: rotate(90deg);\n  }\n  &:before{\n    content:'J';\n    position:absolute;\n    top: -9px;\n    left: 1px;\n    font-size:10px;\n    transform: rotate(180deg);\n  }\n  @media (min-width: ${breakpoints.tablet}) {\n    width:6px;\n    height:6px;\n    top:-5px;\n    &:after{\n      top:-6px;\n      left:0px;\n      font-size: 10px;\n      transform: rotate(90deg);\n    }\n    &:before{\n      top: -13px;\n      font-size:14px;\n    }\n}\n  @media (min-width: ${breakpoints.laptop}) {\n    width:10px;\n    height:10px;\n    top:-9px;\n    &:after{\n      top:-8px;\n      left:2px;\n      font-size: 15px;\n      transform: rotate(90deg);\n    }\n    &:before{\n      top: -15px;\n      font-size:16px;\n    }\n  }\n}\n@media (min-width: ${breakpoints.tablet}) {\n  font-size: 21px;\n  width: 42px;\n  height: 42px;\n}\n@media (min-width: ${breakpoints.laptop}) {\n  font-size: 24px;\n  width: 48px;\n  height: 48px;\n}\n`\nconsole.log(randoNummo());\nconst Branch = ({ day, checkDay }) => {\n  \nconst thisDay = day;\n  const [ornament, setOrnament] = useState(\"\");\n  const [backgroundColor, setBackgroundColor] = useState('transparent')\n const isDay = checkDay(12, thisDay);\nconst getRandoColor=()=>{\n  const r = randoNummo();\n  const g = randoNummo();\n  const b = randoNummo();\n  return `rgb(${r}, ${g}, ${b})`\n}\n  const openDoor = () => {\n    if (isDay) {\n    setBackgroundColor(getRandoColor())\n      setOrnament(\"ornament\");\n    }\n  };\n\n  return (\n    <div onClick={() => openDoor()}>\n      <FirBranch className={ornament? 'firBoxes ornament' : 'firBoxes' }>\n        <FirDate ornament={`${ornament}`} style={{background:`${backgroundColor}`}}>{day}\n        <div className={ornament? 'ornament-cap' : 'noShow' }/>\n        </FirDate>\n       \n      </FirBranch>\n    </div>\n  );\n};\nexport default Branch;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {  colors, breakpoints } from \"../../styles/variables\";\nimport Branch from \"./branch\";\nconst FirBranches = styled.div`\n  text-align: center;\n  .firBoxes:before, \n  .firBoxes:after{\n    content: \"\";\n    position: absolute;\n    width: 0;\n    border-left: 30px solid transparent;\n    border-right: 30px solid transparent;\n  }\n  .firBoxes:before{\n    bottom: 100%;\n    border-bottom-width: 17.32px;\n    border-bottom-style:solid;\n    @media(min-width:${breakpoints.tablet}){\n      border-bottom-width: 18.48px;\n    }\n    @media(min-width:${breakpoints.laptop}){\n      border-bottom-width: 20.78px;\n    }\n  }\n  .firBoxes:after{\n    top: 100%;\n    width: 0;\n    border-top-width: 17.32px;\n    border-top-style:solid;\n    @media(min-width:${breakpoints.tablet}){\n      border-top-width: 18.48px;\n    }\n    @media(min-width:${breakpoints.laptop}){\n      border-top-width: 20.78px;\n    }\n  }\n  \n  .firRow {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack:center;\n    -ms-flex-pack:center;\n    justify-content:center;\n  }\n  #firRow-1,\n  #firRow-2 {\n    .firBoxes {\n      background-color: ${colors.firLight};\n      &:before{\n        border-bottom-color:  ${colors.firLight};\n      }\n      &:after{\n        border-top-color: ${colors.firLight};\n      }\n    }\n  }\n\n  #firRow-3,\n  #firRow-4 {\n    .firBoxes {\n      background-color: ${colors.firMedium};\n      &:before{\n        border-bottom-color:  ${colors.firMedium};\n      }\n      &:after{\n        border-top-color: ${colors.firMedium};\n      }\n    }\n  }\n  #firRow-5,\n  #firRow-6 {\n    .firBoxes {\n      background-color: ${colors.firDark};\n      &:before{\n        border-bottom-color:  ${colors.firDark};\n      }\n      &:after{\n        border-top-color: ${colors.firDark};\n      }\n    }\n  }\n`;\nconst TreeGreen = ({ firArr, checkDay }) => {\n\n\n  const buildTree = () => {\n    let rowLength = 1;\n    let rowCounter = 0;\n    let treeArr = [];\n    let subArr = [];\n    firArr.map((el, i) => {\n      subArr.push(\n        <Branch key={`${i}${el}`} id={`box-${i}`} day={el} checkDay={checkDay} >\n          {el}\n        </Branch>\n      );\n      rowCounter++;\n\n      if (rowCounter === rowLength) {\n        rowLength++;\n\n        treeArr.push(\n          <div\n            className=\"firRow\"\n            id={`firRow-${rowCounter}`}\n            key={`${i}${el}000`}\n          >\n            {subArr}\n          </div>\n        );\n        rowCounter = 0;\n        subArr = [];\n      }\n      return subArr;\n    });\n    return treeArr;\n  };\n  return <FirBranches>{buildTree()}</FirBranches>;\n};\nexport default TreeGreen;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { colors, fonts, breakpoints } from \"../../styles/variables\";\nimport {randoNummo} from '../../utils';\nconst TrunkBoxDiv = styled.div`\n  width: 3em;\n  height: 1.75em;\n  font-size:18px;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-pack:center;\n  -ms-flex-pack:center;\n  justify-content:center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  @media (min-width: ${breakpoints.tablet}) {\n    width: 4em;\n  }\n  @media (min-width: ${breakpoints.laptop}) {\n   width: 4.5em;\n  }\n\n\n`;\n\nconsole.log(randoNummo());\nconst Box = ({ day, checkDay }) => {\n  \nconst thisDay = day;\n\n  const [backgroundColor, setBackgroundColor] = useState(`${colors.trunk}`)\n const isDay = checkDay(12, thisDay);\nconst getRandoColor=()=>{\n  const r = randoNummo();\n  return `rgb(${r}, 0, 0`\n}\n  const openDoor = () => {\n    if (isDay) {\n    setBackgroundColor(getRandoColor())\n    }\n  };\n\n  return (\n\n      <TrunkBoxDiv style={{background:`${backgroundColor}`}} onClick={() => openDoor()}>\n       {day}\n      </TrunkBoxDiv>\n\n  );\n};\nexport default Box;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Box from './box'\nimport {  fonts } from \"../../styles/variables\";\nconst TrunkPan = styled.div`\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  font-family: ${fonts.text};\n\n  \n`;\nconst Trunk = ({ trunkArr, checkDay}) => {\n  \n  const buildTrunk = () => {\n    const trunkChunk = trunkArr.map((el, i) => {\n      return (\n        <Box  key={`${i}${el}`} day={el}  checkDay={checkDay}>\n         {el}\n        </Box>\n      );\n    });\n    return trunkChunk;\n  };\n  return <TrunkPan>{buildTrunk()}</TrunkPan>;\n};\nexport default Trunk;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Star from \"./star\";\nimport TreeGreen from \"./treeGreen\";\nimport Trunk from \"./trunk\";\nimport { splitTree, checkDay } from \"../../utils\";\nconst StarRow = styled.div`\ndisplay:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-pack:center;\n  -ms-flex-pack:center;\n  justify-content:center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  z-index: 10;\n`;\nexport default function Tree() {\n  const wholeTree = splitTree();\n  const firArr = wholeTree[0];\n  const trunkArr = wholeTree[1];\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <StarRow className=\"starRow\">\n        <Star day={25} checkDay={checkDay} />\n      </StarRow>\n\n      <TreeGreen firArr={firArr} checkDay={checkDay} />\n      <Trunk trunkArr={trunkArr} checkDay={checkDay} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../styles/reset.css\";\nimport Layout from \"../components/layout\";\nimport Tree from \"../components/tree/tree\";\nconst IndexPage = () => (\n  <Layout>\n    <Tree />\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}